{
"$PasteDefine$":
"#define Block$v1$Count$v2$ $v3$",
"$Block0Initial$":
"void Block0Initial$v0$(double* result, int idxX, int idxY, int idxZ){ \n    double x = Block0OffsetX + idxX*DX; \n    double y = Block0OffsetY + idxY*DY; \n    int idx = (idxY*Block0CountX + idxX)*CELLSIZE; \n    $v1$ \n}",
"$Block0InitialFill$":
"initFuncArray[$v0$] = Block0Initial$v0$;",
"$Block0InitFuncArray$":
"initFuncArray[type](result, idxX, idxY, idxZ);",
"$Neiman$":
"void Block$Nomber$Bound0_$v0$(double* result, double* source, double t, int idxX, int idxY, int idxZ, double* params, double** ic){ \n    int idx = ( idxY * Block0StrideY + idxX) * CELLSIZE; \n    double bound_value; \n    double nonexistent0X,nonexistent1X,nonexistent2X,nonexistent0Y,nonexistent1Y,nonexistent2Y;  \n    $v1$ \n}",
"$Dirichlet$":
"void Block$Nomber$Bound1_$v0$(double* result, double* source, double t, int idxX, int idxY, int idxZ, double* params, double** ic){ \n    int idx = ( idxY * Block0StrideY + idxX) * CELLSIZE; \n    $v1$ \n}",
"$pFuncs$":
"pFuncs[$v0$] = $v1$;",
"$BlockReplace$":
"//osnova \r\n void Block$Nomber$CentralFunction(double* result, double* source, double t, int idxX, int idxY, int idxZ, double* params, double** ic){ \r\n     int idx = ( idxY * Block0StrideY + idxX) * CELLSIZE; \r\n     $replaceOsn$ \r\n } \r\n //y=0, x=0 \r\n void Block$Nomber$DefaultNeumannBound0(double* result, double* source, double t, int idxX, int idxY, int idxZ, double* params, double** ic){ \r\n     int idx = ( idxY * Block0StrideY + idxX) * CELLSIZE; \r\n     $replace5$ \r\n } \r\n //y=0, x centr \r\n void Block$Nomber$DefaultNeumannBound1(double* result, double* source, double t, int idxX, int idxY, int idxZ, double* params, double** ic){ \r\n     int idx = ( idxY * Block0StrideY + idxX) * CELLSIZE; \r\n     $replace6$ \r\n } \r\n //y=0, x=xmax \r\n void Block$Nomber$DefaultNeumannBound2(double* result, double* source, double t, int idxX, int idxY, int idxZ, double* params, double** ic){ \r\n     int idx = ( idxY * Block0StrideY + idxX) * CELLSIZE; \r\n     $replace7$ \r\n }  \r\n //y centr, x=0 \r\n void Block$Nomber$DefaultNeumannBound3(double* result, double* source, double t, int idxX, int idxY, int idxZ, double* params, double** ic){ \r\n     int idx = ( idxY * Block0StrideY + idxX) * CELLSIZE; \r\n     $replace3$ \r\n } \r\n //y centr, x=xmax \r\n void Block$Nomber$DefaultNeumannBound4(double* result, double* source, double t, int idxX, int idxY, int idxZ, double* params, double** ic){ \r\n     int idx = ( idxY * Block0StrideY + idxX) * CELLSIZE; \r\n     $replace4$ \r\n } \r\n //y=ymax, x=0 \r\n void Block$Nomber$DefaultNeumannBound5(double* result, double* source, double t, int idxX, int idxY, int idxZ, double* params, double** ic){ \r\n     int idx = ( idxY * Block0StrideY + idxX) * CELLSIZE; \r\n     $replace0$ \r\n } \r\n //y=ymax, x centr \r\n void Block$Nomber$DefaultNeumannBound6(double* result, double* source, double t, int idxX, int idxY, int idxZ, double* params, double** ic){ \r\n     int idx = ( idxY * Block0StrideY + idxX) * CELLSIZE; \r\n     $replace1$ \r\n } \r\n //y=ymax, x=xmax \r\n void Block$Nomber$DefaultNeumannBound7(double* result, double* source, double t, int idxX, int idxY, int idxZ, double* params, double** ic){ \r\n     int idx = ( idxY * Block0StrideY + idxX) * CELLSIZE; \r\n     $replace2$ \r\n } \r\n \r\n $Neiman$ \r\n \r\n $Dirichlet$ \r\n void getFuncArray(func_ptr_t** ppFuncs){ \r\n printf(\"Welcome into userfuncs.so. Getting main functions...\\n \"); \r\n  func_ptr_t* pFuncs; \r\n  pFuncs = (func_ptr_t*) malloc( ( 1 + 8 $kolFunc$ ) * sizeof(func_ptr_t) ); \r\n  *ppFuncs = pFuncs; \r\n     pFuncs[0] = Block$Nomber$CentralFunction; \r\n     \r\n     pFuncs[1] = Block$Nomber$DefaultNeumannBound0; \r\n     pFuncs[2] = Block$Nomber$DefaultNeumannBound1; \r\n     pFuncs[3] = Block$Nomber$DefaultNeumannBound2; \r\n     pFuncs[4] = Block$Nomber$DefaultNeumannBound3; \r\n     pFuncs[5] = Block$Nomber$DefaultNeumannBound4; \r\n     pFuncs[6] = Block$Nomber$DefaultNeumannBound5; \r\n     pFuncs[7] = Block$Nomber$DefaultNeumannBound6; \r\n     pFuncs[8] = Block$Nomber$DefaultNeumannBound7; \r\n $pFuncs$  }"
}