#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Hybriddomain documentation build configuration file, created by
# sphinx-quickstart on Fri Sep  7 11:32:31 2018.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys

'''
project_paths = []
project_paths.append(os.path.abspath('../..'))
project_paths.append(os.path.abspath('../../spaces/math_space/common'))

project_paths.append(os.path.abspath('../../envs'))
project_paths.append(os.path.abspath('../../envs/hs'))
project_paths.append(os.path.abspath('../../envs/hs/model'))
project_paths.append(os.path.abspath('../../envs/hs/model/cpp'))
project_paths.append(os.path.abspath('../../envs/hs/model/grid'))
project_paths.append(os.path.abspath('../../envs/hs/block'))
project_paths.append(os.path.abspath('../../envs/hs/block/side'))
project_paths.append(os.path.abspath('../../envs/hs/interconnect'))

project_paths.append(os.path.abspath('../../gens'))
project_paths.append(os.path.abspath('../../gens/hs'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/cpp'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/cpp/env'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/cpp/env/array'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/cpp/env/base'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/cpp/env/bounds'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/cpp/env/bounds/common'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/cpp/env/bounds/d1'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/cpp/env/bounds/d2'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/cpp/env/centrals'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/cpp/env/common'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/cpp/env/definitions'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/cpp/env/ics'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/cpp/env/ics/d1'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/cpp/env/ics/d2'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/cpp/env/initials'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/cpp/env/params'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/fm'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/fm/centrals'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/fm/d1'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/fm/d2'))
project_paths.append(os.path.abspath('../../gens/hs/gen_env/postproc'))
project_paths.append(os.path.abspath('../../gens/hs/arrays_filler'))
project_paths.append(os.path.abspath('../../gens/hs/arrays_filler/blocks'))
project_paths.append(os.path.abspath('../../gens/hs/arrays_filler/ics'))
project_paths.append(os.path.abspath('../../gens/hs/fiocr'))
project_paths.append(os.path.abspath('../../solvers'))
project_paths.append(os.path.abspath('../../solvers/hs'))
project_paths.append(os.path.abspath('../../solvers/hs/remoterun'))
project_paths.append(os.path.abspath('../../solvers/hs/remoterun/progresses'))
project_paths.append(os.path.abspath('../../settings'))

print("project_paths:")
print(project_paths)

for project_path in project_paths:
    sys.path.insert(0, project_path)
'''

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['sphinx.ext.autodoc',
              'sphinx.ext.doctest',
              'sphinx.ext.intersphinx',
              'sphinx.ext.todo',
              'sphinx.ext.coverage',
              'sphinx.ext.mathjax',
              'sphinx.ext.viewcode',
              'sphinx.ext.githubpages',
              'sphinx.ext.extlinks',
              'matplotlib.sphinxext.only_directives',
              'matplotlib.sphinxext.plot_directive',
              'sphinx.ext.graphviz',
              'sphinx.ext.inheritance_diagram']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = 'Hybriddomain'
copyright = '2018, lab'
author = 'lab'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = '0.01'
# The full version, including alpha/beta/rc tags.
release = '0.01'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True


pythonversion = sys.version.split(' ')[0]
# Python and Sage trac ticket shortcuts. For example, :trac:`7549` .

extlinks = {
    'python': ('https://docs.python.org/release/'+pythonversion+'/%s', ''),
    'trac': ('https://trac.sagemath.org/%s', 'trac ticket #'),
    'wikipedia': ('https://en.wikipedia.org/wiki/%s', 'Wikipedia article '),
    'arxiv': ('http://arxiv.org/abs/%s', 'Arxiv '),
    'oeis': ('https://oeis.org/%s', 'OEIS sequence '),
    'doi': ('https://dx.doi.org/%s', 'doi:'),
    'pari': ('http://pari.math.u-bordeaux.fr/dochtml/help/%s', 'pari:'),
    'mathscinet': ('http://www.ams.org/mathscinet-getitem?mr=%s',
                   'MathSciNet ')}

# graphviz:
graphviz_dot = 'dot'


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'alabaster'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {'sidebar_width': '250px'}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# This is required for the alabaster theme
# refs: http://alabaster.readthedocs.io/en/latest/installation.html#sidebars
html_sidebars = {
    '**': [
        'about.html',
        'navigation.html',
        'relations.html',  # needs 'show_related': True theme option to display
        'searchbox.html',
        'donate.html',
    ]
}


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'Hybriddomaindoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'Hybriddomain.tex', 'Hybriddomain Documentation',
     'lab', 'manual'),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'hybriddomain', 'Hybriddomain Documentation',
     [author], 1)
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'Hybriddomain', 'Hybriddomain Documentation',
     author, 'HD', 'One line description of project.',
     'Miscellaneous'),
]




# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {'https://docs.python.org/': None}
